@mixin size($width, $height: $width) {
  height: $height;
  width: $width;
}

@mixin absolute($params...) {
  position: absolute;

  @if length($params) > 0 {
    $params: if(length($params) == 1, nth($params, 1), $params);
    $props: (top, right, bottom, left);

    @for $index from 1 through length($params) {
      #{nth($props, $index)}: nth($params, $index);
    }
  }
}

@mixin focus($outline-width: 2px, $color: currentColor, $offset: -3px) {
  &:focus {
    outline: $outline-width solid $color;
    outline-offset: $offset;
  }
}

@mixin on-event {
  &:hover,
  &:focus,
  &:focus-within {
    @content;
  }
}

@mixin focus-outline($color: currentColor, $offset: -2px) {
  &:focus {
      outline: 1px dashed $color;
      outline-offset: $offset;
  }
}

@mixin transition($prop: all, $duration: 300ms, $easing: ease-in-out) {
  transition: $prop $duration $easing;
}

@mixin underline($height: 1px, $bg-color: var(--color-main-1), $bottom: 2px) {
  position: relative;

  &::after {
    @include transition;
    @include size(100%, $height);
    @include absolute(null, null, $bottom, 0);
    background-color: $bg-color;
    content: "";
    transform: scaleX(0);
  }

  @include on-event {
    &::after {
      transform: scaleX(1);
    }
  }
}

@mixin min-size($width, $height) {
  min-height: $height;
  min-width: $width;
}

@mixin font($font-family, $font-size, $font-weight, $font-style) {
  font-family: $font-family;
  font-size: $font-size;
  font-weight: $font-weight;
  font-style: $font-style;
}
